<?php

namespace Usuario\UsuarioBundle\Repository;

/**
 * UsuariosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuariosRepository extends \Doctrine\ORM\EntityRepository
{
	public function findAllNombreApellidoInspector()
    {
        $qb = $this->createQueryBuilder('d')
        ->join('d.tipoUsuario','t')
        ->where('t.id = 2 and d.habilitado = 1');
        $qb->orderBy('d.apellido', 'ASC');        
        return $qb;
    }   

    public function findOnebyPassword($id){
        $qb = $this->createQueryBuilder('u')
        ->where('u.id = :id ')
        ->setParameter('id',$id);
        return $qb;
    }

    public function findIdBycuit($cuit){
       /* $qb = $this->createQueryBuilder('u')
            ->where('u.usuario = :usuario ')
            ->setParameter('usuario',$cuit);
        return $qb;*/
        $em=$this->getEntityManager();
        $dql="SELECT u.id FROM UsuarioUsuarioBundle:Usuarios u Where u.usuario = ".$cuit;
        $consulta=$em->createQuery($dql);

        return $consulta->getResult();
    }

	public function findAllNombreApellidoInspectorNotificador($tipo = 0)
    {
	    $qb = $this->createQueryBuilder('d')
        ->join('d.tipoUsuario','t')        
        ->orderBy('d.apellido', 'ASC');        

        switch ($tipo) {
            case 1:
                $qb ->where(' t.id = 2  and d.habilitado = 1');
                break;
            case 2:
                $qb ->where('t.id = 3  and d.habilitado = 1');
                break;
            
            default:
                $qb ->where('(t.id = 3 or t.id = 2 ) and d.habilitado = 1');
                break;
        }
        

        
        return $qb;
	}  

    public function selectUsuariosTabla()
    {
        $em=$this->getEntityManager();
        $dql="SELECT CONCAT(u.apellido,', ',u.nombre) as nombre FROM UsuarioUsuarioBundle:Usuarios u";

        $consulta=$em->createQuery($dql);   

        return $consulta->getResult();

    }

    public function findAllUsuariosCampo()
    {
        $qb = $this->createQueryBuilder('d')        
        ->where('d.area = 19 and d.habilitado = 1');
        $qb->orderBy('d.apellido', 'ASC');
        return $qb;
    }

    public function findAllUsuariosLaboratorio()
    {
        $qb = $this->createQueryBuilder('d')
        ->where('d.area in (19, 20, 21, 22, 23) and d.habilitado = 1');
        $qb->orderBy('d.apellido', 'ASC');
        return $qb;
    }
   
}
